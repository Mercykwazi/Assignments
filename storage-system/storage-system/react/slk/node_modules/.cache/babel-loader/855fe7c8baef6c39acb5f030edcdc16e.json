{"ast":null,"code":"import _regeneratorRuntime from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tcgpc1/workspace/Assignments/storage-system/storage-system/src/components/business/forms/location.js\";\nimport React from 'react';\nimport * as actions from '../../../actions/location';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { log } from 'util';\nimport { Redirect } from 'react-router';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nvar Location =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Location, _React$Component);\n\n  function Location(props) {\n    var _this;\n\n    _classCallCheck(this, Location);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Location).call(this, props));\n    _this.state = {\n      address1: _this.props.address1,\n      region: _this.props.address2,\n      country: _this.props.country,\n      redirect: false,\n      businessName: _this.props.business\n    };\n    _this.address1 = _this.address1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectRegion = _this.selectRegion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectCountry = _this.selectCountry.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitData = _this.submitData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Location, [{\n    key: \"address1\",\n    value: function address1(e) {\n      var change = {};\n      change[e.target.name] = e.target.value;\n      this.props.firstAddress(e.target.value);\n      this.setState(change);\n    }\n  }, {\n    key: \"selectRegion\",\n    value: function selectRegion(val) {\n      this.props.secondAddress(val);\n      this.setState({\n        region: val\n      });\n    }\n  }, {\n    key: \"selectCountry\",\n    value: function selectCountry(val) {\n      this.props.countryName(val);\n      this.setState({\n        country: val\n      });\n    }\n  }, {\n    key: \"submitData\",\n    value: function () {\n      var _submitData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return axios.post(\"http://localhost:3003/location\", {\n                  address1: this.props.address1,\n                  address2: this.props.address2,\n                  country: this.props.country,\n                  business: this.state.businessName\n                });\n\n              case 3:\n                results = _context.sent;\n\n                if (results.status === 201) {\n                  this.setState({\n                    redirect: true\n                  });\n                } else if (results.status === 500) {}\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitData(_x) {\n        return _submitData.apply(this, arguments);\n      }\n\n      return submitData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/blocks\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Enter your location details below\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Address1:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"address1\",\n        type: \"text\",\n        placeholder: \"street name\",\n        onChange: this.address1,\n        value: this.state.firstAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Country:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(CountryDropdown, {\n        value: this.state.country,\n        onChange: function onChange(val) {\n          return _this2.selectCountry(val);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Region:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(RegionDropdown, {\n        country: this.state.country,\n        type: \"text\",\n        placeholder: \"city\",\n        onChange: this.selectRegion,\n        value: this.state.region,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"next\",\n        onClick: this.submitData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"next\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Location;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    address1: state.location.address1,\n    address2: state.location.address2,\n    country: state.location.countryName,\n    business: state.viewBusiness.selectedBusiness,\n    state: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    firstAddress: function firstAddress(_firstAddress) {\n      dispatch(actions.firstAddress(_firstAddress));\n    },\n    secondAddress: function secondAddress(address) {\n      dispatch(actions.secondAddress(address));\n    },\n    countryName: function countryName(country) {\n      dispatch(actions.countryName(country));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);","map":{"version":3,"sources":["/home/tcgpc1/workspace/Assignments/storage-system/storage-system/src/components/business/forms/location.js"],"names":["React","actions","connect","axios","log","Redirect","CountryDropdown","RegionDropdown","CountryRegionData","Location","props","state","address1","region","address2","country","redirect","businessName","business","bind","selectRegion","selectCountry","submitData","e","change","target","name","value","firstAddress","setState","val","secondAddress","countryName","preventDefault","post","results","status","Component","mapStateToProps","location","viewBusiness","selectedBusiness","mapDispatchToProps","dispatch","address"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,MAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,+BAAnE;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE,QADZ;AAETC,MAAAA,MAAM,EAAE,MAAKH,KAAL,CAAWI,QAFV;AAGTC,MAAAA,OAAO,EAAE,MAAKL,KAAL,CAAWK,OAHX;AAITC,MAAAA,QAAQ,EAAE,KAJD;AAKTC,MAAAA,YAAY,EAAE,MAAKP,KAAL,CAAWQ;AALhB,KAAb;AAOA,UAAKN,QAAL,GAAgB,MAAKA,QAAL,CAAcO,IAAd,uDAAhB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,uDAArB;AACA,UAAKG,UAAL,GAAkB,MAAKA,UAAL,CAAgBH,IAAhB,uDAAlB;AAZe;AAalB;;;;6BAEQI,C,EAAG;AACR,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAN,GAAwBH,CAAC,CAACE,MAAF,CAASE,KAAjC;AACA,WAAKjB,KAAL,CAAWkB,YAAX,CAAwBL,CAAC,CAACE,MAAF,CAASE,KAAjC;AACA,WAAKE,QAAL,CAAcL,MAAd;AACH;;;iCACYM,G,EAAK;AACd,WAAKpB,KAAL,CAAWqB,aAAX,CAAyBD,GAAzB;AACA,WAAKD,QAAL,CAAc;AAAEhB,QAAAA,MAAM,EAAEiB;AAAV,OAAd;AACH;;;kCAGaA,G,EAAK;AACf,WAAKpB,KAAL,CAAWsB,WAAX,CAAuBF,GAAvB;AACA,WAAKD,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAEe;AAAX,OAAd;AACH;;;;;;gDAEgBP,C;;;;;;AACbA,gBAAAA,CAAC,CAACU,cAAF;;uBACoB9B,KAAK,CAAC+B,IAAN,CAAW,gCAAX,EAA6C;AAAEtB,kBAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAvB;AAAiCE,kBAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAAtD;AAAgEC,kBAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK,OAApF;AAA6FG,kBAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWM;AAAlH,iBAA7C,C;;;AAAhBkB,gBAAAA,O;;AACJ,oBAAIA,OAAO,CAACC,MAAR,KAAmB,GAAvB,EAA4B;AACxB,uBAAKP,QAAL,CAAc;AACVb,oBAAAA,QAAQ,EAAE;AADA,mBAAd;AAGH,iBAJD,MAIO,IAAImB,OAAO,CAACC,MAAR,KAAmB,GAAvB,EAA4B,CAElC;;;;;;;;;;;;;;;;;;6BAGI;AAAA;;AACL,UAAI,KAAKzB,KAAL,CAAWK,QAAf,EAAyB;AACrB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAC+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD/C,EAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,WAAW,EAAC,aAA/C;AAA6D,QAAA,QAAQ,EAAE,KAAKJ,QAA5E;AAAsF,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWiB,YAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAC8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD9C,EAEI,oBAAC,eAAD;AACI,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWI,OADtB;AAEI,QAAA,QAAQ,EAAE,kBAACe,GAAD;AAAA,iBAAS,MAAI,CAACT,aAAL,CAAmBS,GAAnB,CAAT;AAAA,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAPJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD7C,EAEI,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWI,OAApC;AAA6C,QAAA,IAAI,EAAC,MAAlD;AAAyD,QAAA,WAAW,EAAC,MAArE;AAA4E,QAAA,QAAQ,EAAE,KAAKK,YAA3F;AAAyG,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,MAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAfJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBJ,EAsBI;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKS,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,EAsBoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBpE,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBJ,CADJ,CAFI,CAAR;AAgCH;;;;EAjFkBtB,KAAK,CAACqC,S;;AAoF7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAC3B,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAAC4B,QAAN,CAAe3B,QADtB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAAC4B,QAAN,CAAezB,QAFtB;AAGHC,IAAAA,OAAO,EAAEJ,KAAK,CAAC4B,QAAN,CAAeP,WAHrB;AAIHd,IAAAA,QAAQ,EAAEP,KAAK,CAAC6B,YAAN,CAAmBC,gBAJ1B;AAKH9B,IAAAA,KAAK,EAAEA;AALJ,GAAP;AAOH,CARD;;AASA,IAAM+B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHf,IAAAA,YAAY,EAAE,sBAAAA,aAAY,EAAI;AAC1Be,MAAAA,QAAQ,CAAC1C,OAAO,CAAC2B,YAAR,CAAqBA,aAArB,CAAD,CAAR;AACH,KAHE;AAIHG,IAAAA,aAAa,EAAE,uBAAAa,OAAO,EAAI;AACtBD,MAAAA,QAAQ,CAAC1C,OAAO,CAAC8B,aAAR,CAAsBa,OAAtB,CAAD,CAAR;AACH,KANE;AAOHZ,IAAAA,WAAW,EAAE,qBAAAjB,OAAO,EAAI;AACpB4B,MAAAA,QAAQ,CAAC1C,OAAO,CAAC+B,WAAR,CAAoBjB,OAApB,CAAD,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAcA,eAAeb,OAAO,CAACoC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjC,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport * as actions from '../../../actions/location';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { log } from 'util';\nimport { Redirect } from 'react-router';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nclass Location extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            address1: this.props.address1,\n            region: this.props.address2,\n            country: this.props.country,\n            redirect: false,\n            businessName: this.props.business,\n        }\n        this.address1 = this.address1.bind(this)\n        this.selectRegion = this.selectRegion.bind(this)\n        this.selectCountry = this.selectCountry.bind(this)\n        this.submitData = this.submitData.bind(this)\n    }\n\n    address1(e) {\n        var change = {};\n        change[e.target.name] = e.target.value;\n        this.props.firstAddress(e.target.value)\n        this.setState(change);\n    }\n    selectRegion(val) {\n        this.props.secondAddress(val)\n        this.setState({ region: val });\n    }\n\n  \n    selectCountry(val) {\n        this.props.countryName(val)\n        this.setState({ country: val });\n    }\n\n    async submitData(e) {\n        e.preventDefault()\n        var results = await axios.post(\"http://localhost:3003/location\", { address1: this.props.address1, address2: this.props.address2, country: this.props.country, business: this.state.businessName })\n        if (results.status === 201) {\n            this.setState({\n                redirect: true\n            })\n        } else if (results.status === 500) {\n\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/blocks' />\n        }\n        return (<div>\n            <h1>Enter your location details below</h1>\n            <form>\n                <div className=\"location\">\n                    <div >\n                        <label htmlFor=\"address1\">Address1:</label><br />\n                        <input name=\"address1\" type=\"text\" placeholder=\"street name\" onChange={this.address1} value={this.state.firstAddress} />\n                    </div>\n                    <br />\n\n                    <div >\n                        <label htmlFor=\"address2\">Country:</label><br />\n                        <CountryDropdown\n                            value={this.state.country}\n                            onChange={(val) => this.selectCountry(val)} />\n                    </div>\n\n\n                    <div >\n                        <label htmlFor=\"address2\">Region:</label><br />\n                        <RegionDropdown country={this.state.country} type=\"text\" placeholder=\"city\" onChange={this.selectRegion} value={this.state.region} />\n                    </div>\n                    <br />\n\n                    <br />\n                    <button className=\"next\" onClick={this.submitData}>next</button><br />\n                    <br />\n                </div>\n            </form>\n\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        address1: state.location.address1,\n        address2: state.location.address2,\n        country: state.location.countryName,\n        business: state.viewBusiness.selectedBusiness,\n        state: state\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        firstAddress: firstAddress => {\n            dispatch(actions.firstAddress(firstAddress))\n        },\n        secondAddress: address => {\n            dispatch(actions.secondAddress(address))\n        },\n        countryName: country => {\n            dispatch(actions.countryName(country))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Location)\n\n"]},"metadata":{},"sourceType":"module"}